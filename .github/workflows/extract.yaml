# A workflow that is only triggered by a REST API endpoint
# It must contain an input including a git URL

name: extract

on:
  workflow_dispatch:
    inputs:
      url:
        description: "The URL of the git repository to extract the Home Manager configuration from. E.g. github:sjcobb2022/nixos-config"
        required: true
      flake:
        description: "The flake to extract from the repository. E.g. sjcobb@slaptop"
        required: true

jobs:
  extract:
    runs-on: ubuntu-latest
    steps:
      - name: Install nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Cache build artifactsuses
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Declare Variables
        shell: bash
        env:
          URL: ${{ github.event.inputs.url }}
        run: |
          echo "sha=$(nix flake metadata $URL --json | jq -r '.locked.rev')" >> $GITHUB_ENV

      - name: Setup Cache for Nix
        id: cache-nix
        uses: actions/cache@v4
        with:
          path: ./result
          key: ${{ runner.os }}-nix-${{ github.event.inputs.url }}-${{ env.sha }}

      - name: Home Manager Build
        if: steps.cache-nix.outputs.cache-hit != 'true'
        run: nix-shell -p home-manager --run "home-manager build --flake ${{ github.event.inputs.url }}#${{ github.event.inputs.flake }} --option 'home.packages' 'mkForce []' "

      - name: sanitize target
        run: echo ::set-env name=SANITIZED_URL::$(echo ${{ github.event.inputs.url }} | tr '[":<>|*?\r\n\\/]' '-')

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-nix-${{ env.SANITIZED_URL }}-${{ env.sha }}
          path: ./result/home-files
